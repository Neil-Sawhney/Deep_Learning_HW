cnn:
  layer_depths: [20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, ]
  kernel_sizes: [[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3]]

  pool_every_n_layers: 30
  pool_size: 2
  resblock_size: 2
  num_classes: 10
  augmentation_prob: 0.4
  group_norm_num_groups: 5
mlp:
  num_hidden_layers: 2
  hidden_layer_width: 500
learning:
  weight_decay: 0.2
  dropout_first_n_fc_layers: 2
  dropout_prob: 0.5
  batch_size: 50
  num_iters: 100000
  learning_rates: [.001, .005, .01, .005, .001, .0005, 0.005, 0.005, 0.005, .0002, .0001, .0001]
  learning_patience: 300 
display:
  refresh_rate: 5