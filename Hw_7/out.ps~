%!PS-Adobe-3.0
%%Title: image_fit_card_f.py, linear.py, siren_mlp.py, train.py
%%For: 
%%Creator: a2ps version 4.14
%%CreationDate: Wed Nov 29 15:20:08 2023
%%BoundingBox: 24 24 571 818
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%Pages: 8
%%PageOrder: Ascend
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontType get 0 eq {
    currentfont /FontMatrix get 3 get
  }{
    currentfont /FontMatrix get 3 get 1000 mul
  } ifelse
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% composite fonts for ASCII-EUC mixed strings
% Version 1.2 1/31/1990
% Original Ken'ichi HANDA (handa@etl.go.jp)
% Modified Norio Katayama (katayama@rd.nacsis.ac.jp),1998
% Extend & Fix Koji Nakamaru (maru@on.cs.keio.ac.jp), 1999
% Anyone can freely copy, modify, distribute this program.

/copyfont {	% font-dic extra-entry-count  copyfont  font-dic
	1 index maxlength add dict begin
	{	1 index /FID ne 2 index /UniqueID ne and
		{def} {pop pop} ifelse
	} forall
	currentdict
	end
} bind def

/compositefont { % ASCIIFontName EUCFontName RomanScale RomanOffset Rot(T/F) compositefont font
    /RomanRotation exch def
    /RomanOffset exch def
    /RomanScale exch def
    userdict /fixeucfont_dict known not {
	userdict begin
	    /fixeucfont_dict 2 dict begin
		/UpperByteEncoding [
		    16#00 1 16#20 { pop 0 } for
		    16#21 1 16#28 { 16#20 sub } for
		    16#29 1 16#2F { pop 0 } for
		    16#30 1 16#74 { 16#27 sub } for
		    16#75 1 16#FF { pop 0 } for
		] def
	        /LowerByteEncoding [
		    16#00 1 16#A0 { pop /.notdef } for
		    16#A1 1 16#FE { 16#80 sub 16 2 string cvrs
				    (cXX) dup 1 4 -1 roll
				    putinterval cvn } for
		    /.notdef
		] def
		currentdict
	    end def
	end
    } if
    findfont dup /FontType get 0 eq {
	14 dict begin
	    %
	    % 7+8 bit EUC font
	    %
	    12 dict begin
		/EUCFont exch def
		/FontInfo (7+8 bit EUC font) readonly def
		/PaintType 0 def
		/FontType 0 def
		/FontMatrix matrix def
		% /FontName
		/Encoding fixeucfont_dict /UpperByteEncoding get def
		/FMapType 2 def
		EUCFont /WMode known
		{ EUCFont /WMode get /WMode exch def }
		{ /WMode 0 def } ifelse
		/FDepVector [
		    EUCFont /FDepVector get 0 get
		    [ 16#21 1 16#28 {} for 16#30 1 16#74 {} for ]
		    {
			13 dict begin
			    /EUCFont EUCFont def
			    /UpperByte exch 16#80 add def	
			    % /FontName
			    /FontInfo (EUC lower byte font) readonly def
			    /PaintType 0 def
			    /FontType 3 def
			    /FontMatrix matrix def
			    /FontBBox {0 0 0 0} def
			    /Encoding
				fixeucfont_dict /LowerByteEncoding get def
			    % /UniqueID
			    % /WMode
			    /BuildChar {
				gsave
				exch dup /EUCFont get setfont
				/UpperByte get
				2 string
				dup 0 4 -1 roll put
				dup 1 4 -1 roll put
				dup stringwidth setcharwidth
				0 0 moveto show
				grestore
			    } bind def
			    currentdict
			end
			/lowerbytefont exch definefont
		    } forall
		] def
		currentdict
	    end
	    /eucfont exch definefont
	    exch
	    findfont 1 copyfont dup begin
		RomanRotation {
			/FontMatrix FontMatrix
			[ 0 RomanScale neg RomanScale 0 RomanOffset neg 0 ]
			matrix concatmatrix def
		}{
			/FontMatrix FontMatrix
			[ RomanScale 0 0 RomanScale 0 RomanOffset ] matrix concatmatrix
			def
			/CDevProc
			    {pop pop pop pop 0 exch -1000 exch 2 div 880} def
		} ifelse
	    end
	    /asciifont exch definefont
	    exch
	    /FDepVector [ 4 2 roll ] def
	    /FontType 0 def
	    /WMode 0 def
	    /FMapType 4 def
	    /FontMatrix matrix def
	    /Encoding [0 1] def
	    /FontBBox {0 0 0 0} def
%	    /FontHeight 1.0 def % XXXX
	    /FontHeight RomanScale 1.0 ge { RomanScale }{ 1.0 } ifelse def
	    /Descent -0.3 def   % XXXX
	    currentdict
	end
	/tmpfont exch definefont
	pop
	/tmpfont findfont
    }{
	pop findfont 0 copyfont
    } ifelse
} def	

/slantfont {	% FontName slant-degree  slantfont  font'
    exch findfont 1 copyfont begin
    [ 1 0 4 -1 roll 1 0 0 ] FontMatrix exch matrix concatmatrix
    /FontMatrix exch def
    currentdict
    end
} def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 842 def
/sw 595 def
/llx 24 def
/urx 571 def
/ury 818 def
/lly 24 def
/#copies 1 def
/th 20.000000 def
/fnfs 15 def
/bfs 11.199836 def
/cw 6.719901 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   747.029046 th add
def
/pmw 0 def
/pmh 0 def
/v 0 def
/x [
  0
] def
/y [
  pmh ph add 0 mul ph add
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.703931 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(import) K
( tempfile) p n
(from) K
( pathlib ) p
(import) K
( Path) p n
() N
(import) K
( cv2) p n
(import) K
( einops) p n
(import) K
( matplotlib.pyplot as plt) p n
(import) K
( numpy as np) p n
(import) K
( tensorflow as tf) p n
(import) K
( tqdm) p n
(import) K
( yaml) p n
() N
(from) K
( helpers.adam ) p
(import) K
( Adam) p n
(from) K
( modules.siren_mlp ) p
(import) K
( SirenMLP) p n
() N
() N
(def) K
( train\(config_path: Path, use_last_checkpoint: bool\):) p n
(    ) S
(if) K
( config_path ) p
(is) K
( None:) p n
(        config_path = Path\(") S
(configs/image_fit_card_f.yaml) str
("\)) p n
() N
(    ) S
(# HYPERPARAMETERS) c n
(    config = yaml.safe_load\(config_path.read_text\(\)\)) p n
(    refresh_rate = config[") S
(display) str
("][") p
(refresh_rate) str
("]) p n
(    learning_patience = config[") S
(learning) str
("][") p
(learning_patience) str
("]) p n
(    learning_rates = config[") S
(learning) str
("][") p
(learning_rates) str
("]) p n
(    num_iters = config[") S
(learning) str
("][") p
(num_iters) str
("]) p n
(    weight_decay = config[") S
(learning) str
("][") p
(weight_decay) str
("]) p n
(    num_inputs = config[") S
(siren) str
("][") p
(num_inputs) str
("]) p n
(    num_outputs = config[") S
(siren) str
("][") p
(num_outputs) str
("]) p n
(    num_hidden_layers = config[") S
(siren) str
("][") p
(num_hidden_layers) str
("]) p n
(    hidden_layer_width = config[") S
(siren) str
("][") p
(hidden_layer_width) str
("]) p n
() N
(    rng = tf.random.get_global_generator\(\)) N
(    rng.reset_from_seed\(0x43966E87BD57227011B5B03B58785EC1\)) N
(    tf.random.set_seed\(0x43966E87BD57227011B5B03B58785EC1\)) N
() N
(    siren = SirenMLP\() N
(        num_inputs,) N
(        num_outputs,) N
(        num_hidden_layers=num_hidden_layers,) N
(        hidden_layer_width=hidden_layer_width,) N
(        hidden_activation=tf.math.sin,) N
(        output_activation=tf.math.sin,) N
(    \)) N
() N
(    ) S
(# Load the image) c n
(    input_image = cv2.imread\(") p
(data/TestCardF.jpg) str
("\)) p n
() N
(    ) S
(# Resize the image) c n
(    resized_image = cv2.resize\(input_image, \(180, 180\)\)) p n
() N
(    ) S
(# Normalize the image) c n
(    img = resized_image / 255) p n
() N
(    target = einops.rearrange\(img, ") S
(h w c -> \(h w\) c) str
("\)) p n
() N
(    resolution = img.shape[0]) N
(    ) S
(# Generate a linear space from -1 to 1 with the same size as the resolution) c n
(    tmp = np.linspace\(-1, 1, resolution\)) p n
() N
(    ) S
(# Create a meshgrid for pixel coordinates) c n
(    x, y = np.meshgrid\(tmp, tmp\)) p n
() N
(    ) S
(# Reshape and concatenate x and y, and cast them to float32) c n
(    x_reshaped = x.reshape\(-1, 1\)) p n
(    y_reshaped = y.reshape\(-1, 1\)) N
(    img = tf.cast\(tf.concat\(\(x_reshaped, y_reshaped\), 1\), tf.float32\)) N
(image_fit_card_f.py) (Page 1/5) (Nov 29, 23 15:03) title
border
grestore
(Printed by ) rhead
() (1/8) (Wednesday November 29, 2023) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2) 2
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.703931 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
(    used_patience = 0) N
(    minimum_train_loss = np.inf) N
(    minimum_loss_step_num = 0) N
() N
(    ) S
(# Used For Plotting) c n
(    y_train_batch_loss = np.array\([]\)) p n
(    x_train_loss_iterations = np.array\([]\)) N
() N
(    learning_rate_change_steps = np.array\([]\)) N
() N
(    ) S
(# Index of the current learning rate, used to change the learning rate) c n
(    ) p
(# when the training loss stops improving) c n
(    learning_rate_index = 0) p n
(    adam = Adam\() N
(        learning_rates[learning_rate_index],) N
(        weight_decay=weight_decay,) N
(    \)) N
() N
(    ) S
(# find the temp_dir with the prefix if it exists) c n
(    ) p
(# otherwise create a new one) c n
(    temp_dir = None) p n
(    ) S
(for) K
( temp_dir ) p
(in) K
( Path\(tempfile.gettempdir\(\)\).iterdir\(\):) p n
(        ) S
(if) K
( temp_dir.is_dir\(\) ) p
(and) K
( temp_dir.name.startswith\(") p
(siren_) str
("\):) p n
(            ) S
(break) K n
() p n
(    ) S
(if) K
( ) p
(not) K
( temp_dir.name.startswith\(") p
(siren_) str
("\):) p n
(        temp_dir = tempfile.mkdtemp\(prefix=") S
(siren_) str
("\)) p n
() N
(    checkpoint = tf.train.Checkpoint\(siren\)) N
(    checkpoint_manager = tf.train.CheckpointManager\() N
(        checkpoint,) N
(        temp_dir,) N
(        max_to_keep=1,) N
(    \)) N
(    ) S
(if) K
( use_last_checkpoint:) p n
(        ) S
(print) K
(\(") p
(\\n\\nRestoring from last checkpoint) str
("\)) p n
(        checkpoint_manager.restore_or_initialize\(\)) N
() N
(    overall_log = tqdm.tqdm\(total=0, position=1, bar_format=") S
({desc}) str
("\)) p n
(    train_log = tqdm.tqdm\(total=0, position=2, bar_format=") S
({desc}) str
("\)) p n
(    bar = tqdm.trange\(num_iters, position=3\)) N
() N
(    num_of_parameters = tf.math.add_n\() N
(        [tf.math.reduce_prod\(var.shape\) ) S
(for) K
( var ) p
(in) K
( siren.trainable_variables]) p n
(    \)) N
(    ) S
(print) K
(\(f") p
(\\nNumber of Parameters => {num_of_parameters}) str
("\)) p n
() N
(    ) S
(for) K
( i ) p
(in) K
( bar:) p n
(        with tf.GradientTape\(\) as tape:) N
(            logits = siren\(img\)) N
() N
(            current_train_loss = tf.reduce_mean\(\(logits - target\) ** 2\)) N
() N
(        ) S
(# Print initial train batch loss) c n
(        ) p
(if) K
( i == 0:) p n
(            ) S
(print) K
(\(") p
(\\n\\n\\n\\n) str
("\)) p n
(            ) S
(print) K
(\(f") p
(Initial Training Loss => {current_train_loss:0.4f}) str
("\)) p n
() N
(        grads = tape.gradient\(current_train_loss, siren.trainable_variables\)) N
() N
(        adam.apply_gradients\(zip\(grads, siren.trainable_variables\)\)) N
() N
(        current_train_loss = current_train_loss.numpy\(\)) N
() N
(        ) S
(if) K
( current_train_loss < minimum_train_loss:) p n
(image_fit_card_f.py) (Page 2/5) (Nov 29, 23 15:03) title
border
grestore
(Printed by ) rhead
() (Wednesday November 29, 2023) (2/8) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 3
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.703931 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(            minimum_train_loss = current_train_loss) p n
(            minimum_loss_step_num = i) N
(            checkpoint_manager.save\(\)) N
(        used_patience = i - minimum_loss_step_num) N
() N
(        y_train_batch_loss = np.append\(y_train_batch_loss, current_train_loss\)) N
(        x_train_loss_iterations = np.append\(x_train_loss_iterations, i\)) N
() N
(        ) S
(if) K
( i % refresh_rate == \(refresh_rate - 1\):) p n
(            learning_rates_left = len\(learning_rates\) - learning_rate_index) N
(            patience_left = learning_patience - used_patience) N
(            overall_description = \() N
(                f") S
(Minimum Train Loss => {minimum_train_loss:0.4f}    ) str
(") p n
(                + f") S
(Learning Rates Left => {learning_rates_left}    ) str
(") p n
(                + f") S
(Patience Left => {patience_left}    ) str
(") p n
(            \)) N
(            overall_log.set_description_str\(overall_description\)) N
(            overall_log.refresh\(\)) N
() N
(            train_description = f") S
(Train Batch Loss => {current_train_loss:0.4f}    ) str
(") p n
(            train_log.set_description_str\(train_description\)) N
(            train_log.update\(refresh_rate\)) N
() N
(            bar_description = f") S
(Step => {i}) str
(") p n
(            bar.set_description\(bar_description\)) N
(            bar.refresh\(\)) N
() N
(            ) S
(# if the training loss has not improved for learning_patience) c n
(            ) p
(if) K
( \() p n
(                current_train_loss > minimum_train_loss) N
(                ) S
(and) K
( i - minimum_loss_step_num > learning_patience) p n
(            \):) N
(                ) S
(if) K
( learning_rate_index == \(len\(learning_rates\) - 1\):) p n
(                    ) S
(break) K n
(                learning_rate_index += 1) p n
(                adam.learning_rate = learning_rates[learning_rate_index]) N
(                learning_rate_change_steps = np.append\(learning_rate_change_step) N
(s, i\)) N
(                checkpoint_manager.restore_or_initialize\(\)) N
() N
(    checkpoint_manager.restore_or_initialize\(\)) N
() N
(    ) S
(# delete the temporary directory) c n
(    tf.io.gfile.rmtree\(temp_dir\)) p n
() N
(    checkpoint_manager = tf.train.CheckpointManager\() N
(        checkpoint, ") S
(artifacts/siren/model) str
(", max_to_keep=1) p n
(    \)) N
(    checkpoint_manager.save\(\)) N
() N
(    fig, ax = plt.subplots\(3, 1\)) N
(    plt.subplots_adjust\(hspace=1\)) N
() N
(    ax[0].semilogy\(x_train_loss_iterations, y_train_batch_loss, label=") S
(Training Los) str n
(s) S
("\)) p n
(    ) S
(for) K
( learning_rate_change_step ) p
(in) K
( learning_rate_change_steps:) p n
(        ax[0].axvline\() N
(            x=learning_rate_change_step,) N
(            color=") S
(black) str
(",) p n
(            linestyle=") S
(dashed) str
(",) p n
(            label=") S
(Learning Rate Change) str
(",) p n
(        \)) N
(    ax[0].axvline\() N
(        x=minimum_loss_step_num, color=") S
(red) str
(", linestyle=") p
(dashed) str
(", label=") p
(Minimum Lo) str n
(ss) S
(") p n
(    \)) N
(image_fit_card_f.py) (Page 3/5) (Nov 29, 23 15:03) title
border
grestore
(Printed by ) rhead
() (3/8) (Wednesday November 29, 2023) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (4) 4
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.703931 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(    ax[0].set_xlabel\(") p
(Iterations) str
("\)) p n
(    ax[0].set_ylabel\(") S
(Loss) str
("\)) p n
() N
(    ax[1].imshow\() N
(        einops.rearrange\(target, ") S
(\(h w\) c -> h w c) str
(", h=resolution\),) p n
(        interpolation=") S
(nearest) str
(",) p n
(    \)) N
(    ax[1].set_title\(") S
(Ground Truth) str
("\)) p n
(    ax[1].axis\(") S
(off) str
("\)) p n
() N
(    ax[2].imshow\() N
(        einops.rearrange\(logits, ") S
(\(h w\) c -> h w c) str
(", h=resolution\),) p n
(        interpolation=") S
(nearest) str
(",) p n
(    \)) N
(    ax[2].set_title\(") S
(Prediction) str
("\)) p n
(    ax[2].axis\(") S
(off) str
("\)) p n
() N
(    ) S
(print) K
(\(") p
(\\n\\n\\n\\n) str
("\)) p n
() N
(    ) S
(print) K
(\(f") p
(Stop Iteration => {i}) str
("\)) p n
() N
(    fig.suptitle\(") S
(Siren - Card F:) str
("\)) p n
() N
(    ) S
(# if the file already exists add a number to the end of the file name) c n
(    ) p
(# to avoid overwriting) c n
(    file_index = 0) p n
(    ) S
(while) K
( Path\(f") p
(artifacts/siren/siren_img_{file_index}.png) str
("\).exists\(\):) p n
(        file_index += 1) N
(    fig.savefig\(f") S
(artifacts/siren/siren_img_{file_index}.png) str
("\)) p n
() N
(    ) S
(# Save the config file as a yaml under the same name as the image) c n
(    config_path = Path\(f") p
(artifacts/siren/siren_img_{file_index}.yaml) str
("\)) p n
(    config_path.write_text\(yaml.dump\(config\)\)) N
() N
(    ) S
(# save the model) c n
(    checkpoint_manager.save\(\)) p n
(    config_path = Path\(f") S
(artifacts/siren/model/model.yaml) str
("\)) p n
(    config_path.write_text\(yaml.dump\(config\)\)) N
() N
() N
(def) K
( test\(model_path: Path\):) p n
(    ) S
(if) K
( model_path ) p
(is) K
( None:) p n
(        model_path = Path\(") S
(artifacts/who_bites_who/model) str
("\)) p n
() N
(    ) S
(if) K
( ) p
(not) K
( model_path.exists\(\):) p n
(        ) S
(print) K
(\(") p
(Model does not exist, run the train script first) str
("\)) p n
(        ) S
(return) K n
() p n
(    config_path = Path\(") S
(artifacts/who_bites_who/model/model.yaml) str
("\)) p n
() N
(    config = yaml.safe_load\(config_path.read_text\(\)\)) N
(    context_length = config[") S
(data) str
("][") p
(context_length) str
("]) p n
(    num_heads = config[") S
(transformer) str
("][") p
(num_heads) str
("]) p n
(    model_dim = config[") S
(transformer) str
("][") p
(model_dim) str
("]) p n
(    ffn_dim = config[") S
(transformer) str
("][") p
(ffn_dim) str
("]) p n
(    num_blocks = config[") S
(transformer) str
("][") p
(num_blocks) str
("]) p n
() N
(    rng = tf.random.get_global_generator\(\)) N
(    rng.reset_from_seed\(0x43966E87BD57227011B5B03B58785EC1\)) N
(    tf.random.set_seed\(0x43966E87BD57227011B5B03B58785EC1\)) N
() N
(    vocab_file = Path\(") S
(artifacts/who_bites_who/model/vocab.txt) str
("\)) p n
() N
(    transformer_decoder = TransformerDecoder\() N
(        context_length,) N
(        num_heads,) N
(image_fit_card_f.py) (Page 4/5) (Nov 29, 23 15:03) title
border
grestore
(Printed by ) rhead
() (Wednesday November 29, 2023) (4/8) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5) 5
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.703931 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(        model_dim,) p n
(        ffn_dim,) N
(        num_blocks,) N
(        vocab_file=vocab_file,) N
(    \)) N
() N
(    checkpoint = tf.train.Checkpoint\(transformer_decoder\)) N
(    checkpoint.restore\(tf.train.latest_checkpoint\(model_path\)\)) N
() N
(    ) S
(print) K
(\(") p
(\\n\\n\\n\\nEnter 'exit' to exit) str
("\)) p n
(    ) S
(while) K
( 1:) p n
(        input_text = input\(") S
(\\n\\nEnter a sentence: ) str
("\)) p n
(        ) S
(if) K
( input_text == ") p
(exit) str
(":) p n
(            ) S
(break) K n
() p n
(        tokenized_text = transformer_decoder.predict\(input_text\)) N
(        ) S
(print) K
(\(f") p
(Bite Bot: ) str
(" + tokenized_text\)) p n
(image_fit_card_f.py) (Page 5/5) (Nov 29, 23 15:03) title
border
grestore
(Printed by ) rhead
() (5/8) (Wednesday November 29, 2023) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 6
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.703931 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(import) K
( tensorflow as tf) p n
() N
() N
(class) K
( Linear\(tf.Module\):) p n
(    ) S
(def) K
( __init__\() p n
(        self,) N
(        num_inputs,) N
(        num_outputs,) N
(        bias=True,) N
(        zero_init=False,) N
(        siren_init=False,) N
(    \):) N
(        rng = tf.random.get_global_generator\(\)) N
() N
(        stddev = tf.cast\(tf.math.sqrt\(2 / \(num_inputs + num_outputs\)\), tf.float3) N
(2\)) N
() N
(        self.bias = bias) N
() N
(        w_initial_value = rng.normal\(shape=[num_inputs, num_outputs], stddev=std) N
(dev\)) N
(        ) S
(if) K
( zero_init:) p n
(            w_initial_value = tf.zeros\(shape=[num_inputs, num_outputs]\)) N
(        ) S
(elif) K
( siren_init:) p n
(            w_initial_value = rng.uniform\() N
(                minval=-tf.math.sqrt\(6 / num_outputs\),) N
(                maxval=tf.math.sqrt\(6 / num_outputs\),) N
(                shape=[num_inputs, num_outputs],) N
(            \)) N
(        self.w = tf.Variable\() N
(            w_initial_value,) N
(            trainable=True,) N
(            name=") S
(Linear/w) str
(",) p n
(        \)) N
() N
(        ) S
(if) K
( self.bias:) p n
(            self.b = tf.Variable\() N
(                tf.zeros\() N
(                    shape=[1, num_outputs],) N
(                \),) N
(                trainable=True,) N
(                name=") S
(Linear/b) str
(",) p n
(            \)) N
() N
(    ) S
(# create the logits by multiplying the inputs by the weights + the) c n
(    ) p
(# optional bias) c n
(    ) p
(def) K
( __call__\(self, x\):) p n
(        z = x @ self.w) N
() N
(        ) S
(if) K
( self.bias:) p n
(            z += self.b) N
() N
(        ) S
(return) K
( z) p n
(linear.py) (Page 1/1) (Nov 29, 23 15:13) title
border
grestore
(Printed by ) rhead
() (Wednesday November 29, 2023) (6/8) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 7
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.703931 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(import) K
( tensorflow as tf) p n
() N
(from) K
( modules.linear ) p
(import) K
( Linear) p n
() N
() N
(class) K
( SirenMLP\(tf.Module\):) p n
(    ) S
(def) K
( __init__\() p n
(        self,) N
(        num_inputs,) N
(        num_outputs,) N
(        num_hidden_layers=0,) N
(        hidden_layer_width=0,) N
(        hidden_activation=tf.identity,) N
(        output_activation=tf.identity,) N
(        dropout_prob=0,) N
(        zero_init=False,) N
(    \):) N
(        self.num_inputs = num_inputs) N
(        self.num_outputs = num_outputs) N
(        self.num_hidden_layers = num_hidden_layers) N
(        self.hidden_layer_width = hidden_layer_width) N
(        self.hidden_activation = hidden_activation) N
(        self.output_activation = output_activation) N
(        self.hidden_linear = \() N
(            Linear\(self.hidden_layer_width, self.hidden_layer_width, siren_init=) N
(True\)) N
(            ) S
(if) K
( self.num_hidden_layers > 0) p n
(            ) S
(else) K
( None) p n
(        \)) N
(        self.first_linear = Linear\(num_inputs, hidden_layer_width, siren_init=Tr) N
(ue\)) N
(        self.final_linear = Linear\() N
(            self.hidden_layer_width,) N
(            self.num_outputs,) N
(            zero_init=zero_init,) N
(            siren_init=True,) N
(        \)) N
(        self.dropout_prob = dropout_prob) N
() N
(    ) S
(def) K
( __call__\(self, x\):) p n
(        """) S
(Applies the MLP to the input) str n
() N
(        Args:) N
(            x \(tf.tensor\): input tensor of shape [batch_size, num_inputs]) N
() N
(        Returns:) N
(            tf.tensor: output tensor of shape [batch_size, num_outputs]) N
(        ) S
(""") p n
(        x = self.hidden_activation\(self.first_linear\(x\) * 30\)) N
() N
(        ) S
(for) K
( _ ) p
(in) K
( range\(self.num_hidden_layers\):) p n
(            x = self.hidden_activation\(self.hidden_linear\(x\)\)) N
() N
(        ) S
(if) K
( self.dropout_prob > 0:) p n
(            x = tf.nn.dropout\(x, self.dropout_prob\)) N
() N
(        ) S
(return) K
( self.output_activation\(self.final_linear\(x\)\)) p n
(siren_mlp.py) (Page 1/1) (Nov 29, 23 15:13) title
border
grestore
(Printed by ) rhead
() (7/8) (Wednesday November 29, 2023) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1) 8
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.703931 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(#!/usr/bin/env python3) c n
() p n
(import) K
( argparse) p n
(import) K
( importlib) p n
(from) K
( pathlib ) p
(import) K
( Path) p n
() N
(import) K
( argcomplete) p n
() N
() N
(def) K
( main\(\):) p n
(    parser = argparse.ArgumentParser\(description=") S
(Choose an example to train:) str
("\)) p n
(    parser.add_argument\(") S
(runner) str
(", type=Path,) p n
(                        help=") S
(Path to the runner file) str
("\)) p n
(    parser.add_argument\(") S
(--config) str
(", ") p
(-c) str
(", type=Path,) p n
(                        nargs=') S
(?) str
(', help=") p
(Path to the config file) str
("\)) p n
(    parser.add_argument\(") S
(--restore_from_checkpoint) str
(", ") p
(-r) str
(", action=") p
(store_true) str
(",) p n
(                        help=") S
(Whether or not to use the last checkpoint) str
("\)) p n
() N
(    argcomplete.autocomplete\(parser\)) N
(    args = parser.parse_args\(\)) N
() N
(    runner = importlib.import_module\(f") S
(runners.{args.runner.stem}) str
("\)) p n
(    runner.train\(args.config, args.restore_from_checkpoint\)) N
() N
() N
(if) K
( __name__ == ") p
(__main__) str
(":) p n
(    main\(\)) N
(train.py) (Page 1/1) (Nov 04, 23 17:25) title
border
grestore
(Printed by ) rhead
() (Wednesday November 29, 2023) (8/8) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
